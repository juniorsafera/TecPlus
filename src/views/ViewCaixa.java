/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dao.ConnectionFactory;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author IdeaSofist
 */
public class ViewCaixa extends javax.swing.JFrame {

    /**
     * Creates new form ViewCaixa
     */
    
    // Área para variáveis úteis
    
    
    String dataHoje = null;

    Double calculo;
    NumberFormat formatarDouble = new DecimalFormat("0.00");

    Double totalEntrada = 0.00;
    Double totalSaida = 0.00;
    Double totalCaixa = 0.00;

    Double totalEntradaDinheiro = 0.00;
    Double totalEntradaCartao = 0.00;

    String tipo_entrada = null;
    
    public ViewCaixa() {
        initComponents();
        
        pegarDataAtual();

        listarMovimentoEntrada();
        listarMovimentoSaida();

        totalEntradaDinheiro();
        totalEntradaCartao();

        totalSaidaCaixa();

        totalCaixaEntrada_saida();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        bSair = new javax.swing.JPanel();
        tDescricaoEntrada = new javax.swing.JTextField();
        tValorEntrada = new javax.swing.JTextField();
        rDinheiro = new javax.swing.JRadioButton();
        rCartao = new javax.swing.JRadioButton();
        bAdicionarEntrada = new javax.swing.JPanel();
        tDescricaoSaida = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEntrada = new javax.swing.JTable();
        tValorSaida = new javax.swing.JTextField();
        bAdicionarSaida = new javax.swing.JPanel();
        tTotalCaixaDinheiro = new javax.swing.JTextField();
        tTotalCaixaCartao = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbSaida = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSair.setOpaque(false);
        bSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSairMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bSairLayout = new javax.swing.GroupLayout(bSair);
        bSair.setLayout(bSairLayout);
        bSairLayout.setHorizontalGroup(
            bSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        bSairLayout.setVerticalGroup(
            bSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        getContentPane().add(bSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 505, 100, 40));

        tDescricaoEntrada.setBackground(new java.awt.Color(33, 113, 48));
        tDescricaoEntrada.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tDescricaoEntrada.setForeground(new java.awt.Color(255, 255, 255));
        tDescricaoEntrada.setBorder(null);
        tDescricaoEntrada.setOpaque(false);
        getContentPane().add(tDescricaoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 42, 400, -1));

        tValorEntrada.setEditable(false);
        tValorEntrada.setBackground(new java.awt.Color(33, 113, 48));
        tValorEntrada.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tValorEntrada.setForeground(new java.awt.Color(255, 255, 255));
        tValorEntrada.setText("00,00");
        tValorEntrada.setToolTipText("");
        tValorEntrada.setBorder(null);
        tValorEntrada.setOpaque(false);
        tValorEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tValorEntradaMouseClicked(evt);
            }
        });
        getContentPane().add(tValorEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, 79, -1));

        buttonGroup1.add(rDinheiro);
        rDinheiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rDinheiroMouseClicked(evt);
            }
        });
        rDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rDinheiroActionPerformed(evt);
            }
        });
        getContentPane().add(rDinheiro, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 42, -1, -1));

        buttonGroup1.add(rCartao);
        rCartao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rCartaoMouseClicked(evt);
            }
        });
        rCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rCartaoActionPerformed(evt);
            }
        });
        getContentPane().add(rCartao, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 42, -1, -1));

        bAdicionarEntrada.setToolTipText("Adicionar");
        bAdicionarEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bAdicionarEntrada.setOpaque(false);
        bAdicionarEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAdicionarEntradaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bAdicionarEntradaLayout = new javax.swing.GroupLayout(bAdicionarEntrada);
        bAdicionarEntrada.setLayout(bAdicionarEntradaLayout);
        bAdicionarEntradaLayout.setHorizontalGroup(
            bAdicionarEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        bAdicionarEntradaLayout.setVerticalGroup(
            bAdicionarEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(bAdicionarEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 38, 30, 30));

        tDescricaoSaida.setBackground(new java.awt.Color(109, 34, 51));
        tDescricaoSaida.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tDescricaoSaida.setForeground(new java.awt.Color(255, 255, 255));
        tDescricaoSaida.setBorder(null);
        tDescricaoSaida.setOpaque(false);
        getContentPane().add(tDescricaoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 293, 560, 20));

        tbEntrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbEntrada);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 77, 1000, 160));

        tValorSaida.setEditable(false);
        tValorSaida.setBackground(new java.awt.Color(109, 34, 51));
        tValorSaida.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tValorSaida.setForeground(new java.awt.Color(255, 255, 255));
        tValorSaida.setText("00,00");
        tValorSaida.setBorder(null);
        tValorSaida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tValorSaidaMouseClicked(evt);
            }
        });
        getContentPane().add(tValorSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 283, 90, 40));

        bAdicionarSaida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bAdicionarSaida.setOpaque(false);
        bAdicionarSaida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAdicionarSaidaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bAdicionarSaidaLayout = new javax.swing.GroupLayout(bAdicionarSaida);
        bAdicionarSaida.setLayout(bAdicionarSaidaLayout);
        bAdicionarSaidaLayout.setHorizontalGroup(
            bAdicionarSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        bAdicionarSaidaLayout.setVerticalGroup(
            bAdicionarSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(bAdicionarSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 290, 30, 30));

        tTotalCaixaDinheiro.setBackground(new java.awt.Color(33, 113, 48));
        tTotalCaixaDinheiro.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        tTotalCaixaDinheiro.setForeground(new java.awt.Color(255, 255, 255));
        tTotalCaixaDinheiro.setText("00,00");
        tTotalCaixaDinheiro.setBorder(null);
        tTotalCaixaDinheiro.setOpaque(false);
        getContentPane().add(tTotalCaixaDinheiro, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 500, 90, 30));

        tTotalCaixaCartao.setBackground(new java.awt.Color(33, 113, 48));
        tTotalCaixaCartao.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        tTotalCaixaCartao.setForeground(new java.awt.Color(255, 255, 255));
        tTotalCaixaCartao.setText("00,00");
        tTotalCaixaCartao.setBorder(null);
        tTotalCaixaCartao.setOpaque(false);
        getContentPane().add(tTotalCaixaCartao, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 502, 90, 30));

        tbSaida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbSaida);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 1000, 140));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TelaCaixa.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSairMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_bSairMouseClicked

    private void bAdicionarEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAdicionarEntradaMouseClicked
        // TODO add your handling code here:
         if(tDescricaoEntrada.getText().equals("")){
           JOptionPane.showMessageDialog(this, "Informe a Descrição da entrada!" , "Atençao!" ,JOptionPane.WARNING_MESSAGE);
        } else if(tValorEntrada.getText().equals("00,00")){
           JOptionPane.showMessageDialog(this, "Informe o Valor da entrada!" , "Atençao!" ,JOptionPane.WARNING_MESSAGE);
        } else if(tipo_entrada == null){
           JOptionPane.showMessageDialog(this, "Informe a forma de entrada Dinheiro ou Cartão!" , "Atençao!" ,JOptionPane.WARNING_MESSAGE);
        } else {
        adicionarNoCaixaEntrada();
        }
    }//GEN-LAST:event_bAdicionarEntradaMouseClicked

    private void bAdicionarSaidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAdicionarSaidaMouseClicked
        // TODO add your handling code here:
         if(tDescricaoSaida.getText().equals("")){
           JOptionPane.showMessageDialog(this, "Informe a Descrição da Saída!" , "Atençao!" ,JOptionPane.WARNING_MESSAGE);
        } else if(tValorSaida.getText().equals("00,00")){
           JOptionPane.showMessageDialog(this, "Informe o Valor da Saída!" , "Atençao!" ,JOptionPane.WARNING_MESSAGE);
        } else   {
        adicionarNoCaixaSaida();
        }
        
    }//GEN-LAST:event_bAdicionarSaidaMouseClicked

    private void tValorEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tValorEntradaMouseClicked
        // TODO add your handling code here:
        adicionarValorEntrada();
    }//GEN-LAST:event_tValorEntradaMouseClicked

    private void rDinheiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rDinheiroMouseClicked
        // TODO add your handling code here:
        tipo_entrada = "Dinheiro";
    }//GEN-LAST:event_rDinheiroMouseClicked

    private void rDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rDinheiroActionPerformed
        // TODO add your handling code here:
        tipo_entrada = "Dinheiro";
    }//GEN-LAST:event_rDinheiroActionPerformed

    private void rCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rCartaoActionPerformed
        // TODO add your handling code here:
        tipo_entrada = "Cartão";
    }//GEN-LAST:event_rCartaoActionPerformed

    private void rCartaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rCartaoMouseClicked
        // TODO add your handling code here:
        tipo_entrada = "Cartão";
    }//GEN-LAST:event_rCartaoMouseClicked

    private void tValorSaidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tValorSaidaMouseClicked
        // TODO add your handling code here:
         adicionarValorSaida();
    }//GEN-LAST:event_tValorSaidaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCaixa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bAdicionarEntrada;
    private javax.swing.JPanel bAdicionarSaida;
    private javax.swing.JPanel bSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rCartao;
    private javax.swing.JRadioButton rDinheiro;
    private javax.swing.JTextField tDescricaoEntrada;
    private javax.swing.JTextField tDescricaoSaida;
    private javax.swing.JTextField tTotalCaixaCartao;
    private javax.swing.JTextField tTotalCaixaDinheiro;
    private javax.swing.JTextField tValorEntrada;
    private javax.swing.JTextField tValorSaida;
    private javax.swing.JTable tbEntrada;
    private javax.swing.JTable tbSaida;
    // End of variables declaration//GEN-END:variables


  
    /*
    *
    * ÁREA PARA TODOS OS MÉTODOS
    *
     */
    
    
     // INÍCIO Método para setar icon do jFrame
    private void setaricon() {

        //  ImageIcon frameIcon = new ImageIcon("icon.png");
        //this.setIconImage(frameIcon.getImage());
        URL url = this.getClass().getResource("icon.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
    }
    // FIM Método para setar icon do jFrame
    
    
    
    
    //INÍCIO Método para pegar a data atual do sistema
    private void pegarDataAtual() {

        Date data = new Date(System.currentTimeMillis());
        SimpleDateFormat formatarDate = new SimpleDateFormat("yyyy-MM-dd");
        dataHoje = formatarDate.format(data);

    }
    //FIM Método para pegar a data atual do sistema

    // INÍCIO Método para listar Movimento Entrada no caixa
    private void listarMovimentoEntrada() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = "SELECT  descricao Descrição , "
                + " valor Valor_R$ , tipo_pagamento Pagamento "
                + " FROM caixa where  data_movimento  LIKE ? AND tipo_movimento = 'Entrada' ";
        try {
            stmt = con.prepareStatement(sql);
            stmt.setString(1, dataHoje + "%");

            rs = stmt.executeQuery();

            tbEntrada.setModel(DbUtils.resultSetToTableModel(rs));
            // System.out.println(rs);
            tbEntrada.setDefaultEditor(Object.class, null);

            tbEntrada.getColumnModel().getColumn(0).setPreferredWidth(500);
            tbEntrada.getColumnModel().getColumn(1).setPreferredWidth(5);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    // FIM Método para listar Movimento Entrada no caixa

    // INÍCIO Método para listar Movimento Saída no caixa
    private void listarMovimentoSaida() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = "SELECT  descricao Descrição , "
                + " valor Valor_R$  "
                + " FROM caixa where  data_movimento  LIKE ? AND tipo_movimento = 'Saida' ";
        try {
            stmt = con.prepareStatement(sql);
            stmt.setString(1, dataHoje + "%");

            rs = stmt.executeQuery();

            tbSaida.setModel(DbUtils.resultSetToTableModel(rs));

            tbSaida.setDefaultEditor(Object.class, null);

            tbSaida.getColumnModel().getColumn(0).setPreferredWidth(500);
            tbSaida.getColumnModel().getColumn(1).setPreferredWidth(5);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    // FIM Método para listar Movimento Saída no caixa

    // INÍCIO Método para calcular Total Entrada em dinheiro
    private void totalEntradaDinheiro() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        Double r = null;

        String sql = "SELECT   SUM(valor) from caixa where data_movimento LIKE ? AND tipo_movimento = 'Entrada' AND tipo_pagamento = 'Dinheiro' ";
        try {
            stmt = con.prepareStatement(sql);
            stmt.setString(1, dataHoje + "%");

            rs = stmt.executeQuery();

            // Validar para nao receber valor null 
            if (rs.getString(1) != null) {
                r = Double.parseDouble(rs.getString(1));
                totalEntradaDinheiro = r;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    // FIM Método para calcular Total Entrada em dinheiro

    // INÍCIO Método para calcular Total Entrada em cartão
    private void totalEntradaCartao() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        Double r = null;

        String sql = "SELECT   SUM(valor) from caixa where data_movimento LIKE ? AND tipo_movimento = 'Entrada' AND tipo_pagamento = 'Cartão' ";
        try {
            stmt = con.prepareStatement(sql);
            stmt.setString(1, dataHoje + "%");

            rs = stmt.executeQuery();

            // Validar para nao receber valor null 
            if (rs.getString(1) != null) {
                r = Double.parseDouble(rs.getString(1));
                tTotalCaixaCartao.setText(formatarDouble.format(r).toString().replace(".", ","));
                totalEntradaCartao = r;
                //System.out.println("Entrada cartão: " + r);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    // FIM Método para calcular Total Entrada em cartão

    //INÍCIO Método para calcular Entrada e Saída do caixa
    private void totalCaixaEntrada_saida() {
        Double t = 0.0;

        t = totalEntradaDinheiro - totalSaida;
        tTotalCaixaDinheiro.setText(formatarDouble.format(t).toString().replace(".", ","));

    }
    //FIM Método para calcular Entrada e saida do caixa

    //INÍCIO Método para registrar saida no caixa
    private void adicionarNoCaixaSaida() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = "INSERT  INTO caixa "
                + "( descricao, "
                + "  valor , tipo_movimento , data_movimento )  "
                + " VALUES (?,?,?,? )";
        try {
            stmt = con.prepareStatement(sql);

            stmt.setString(1, tDescricaoSaida.getText());
            stmt.setString(2, tValorSaida.getText().replace(",", "."));
            stmt.setString(3, "Saida");
            stmt.setString(4, dataHoje);

            //  formatarDouble.format(Double.parseDouble(tValorp.getText())).toString() 
            // A linha abaixo valida os campos obgtorios
            if ((tDescricaoSaida.getText().isEmpty() || tValorSaida.getText().equals("00,00"))) {
                JOptionPane.showMessageDialog(null, "Preencha Descrição e Valor de Saída!" , "Atençao!" ,JOptionPane.WARNING_MESSAGE);
            } else {

                int adicionado = stmt.executeUpdate();
                if (adicionado > 0) {
                    JOptionPane.showMessageDialog(null, "Saída Adicionada!");
                    listarMovimentoSaida();
                    limparSaida();

                    totalSaidaCaixa();
                    totalCaixaEntrada_saida();

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    //FIM Método para registrar saida no caixa

    // INÍCIO Método para calcular Total Saída  
    private void totalSaidaCaixa() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        Double r = null;

        String sql = "SELECT   SUM(valor) from caixa where data_movimento LIKE ? AND tipo_movimento = 'Saida'  ";
        try {
            stmt = con.prepareStatement(sql);
            stmt.setString(1, dataHoje + "%");

            rs = stmt.executeQuery();

            // Validar para nao receber valor null 
            if (rs.getString(1) != null) {
                r = Double.parseDouble(rs.getString(1));
                totalSaida = r;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    // FIM Método para calcular Total Saída  

    // INÍCIO Método limpar campos saida
    private void limparSaida() {
        tDescricaoSaida.setText(null);
        tValorSaida.setText("00,00");
    }
    // FIM Método limpar campos saida

    // INÍCIO Método limpar campos entrada
    private void limparEntrada() {
        tDescricaoEntrada.setText(null);
        tValorEntrada.setText("00,00");
        rDinheiro.setSelected(true);
        tipo_entrada = "Dinheiro";
    }
    // FIM Método limpar campos entrada

    //INÍCIO Método para adicionar o valor de saída
    private void adicionarValorSaida() {
        String entrada = null;
        Double valor = 0.0;
        Double total = 0.0;
        entrada = JOptionPane.showInputDialog("Digite o valor que está retirando do caixa:");

        if (entrada != null) {
            valor = Double.parseDouble(entrada.toString().replace(",", "."));

            tValorSaida.setText(String.valueOf(formatarDouble.format(valor)).replace(".", ","));
        } else {

        }
    }
    // FIM Método para adicionar o valor de saída

    //INÍCIO Método para adicionar o valor de entrada
    private void adicionarValorEntrada() {
        String entrada = null;
        Double valor = 0.0;
        
        entrada = JOptionPane.showInputDialog("Digite o valor que está entrando no caixa:");

        if (entrada != null) {
            valor = Double.parseDouble(entrada.toString().replace(",", "."));

            tValorEntrada.setText(String.valueOf(formatarDouble.format(valor)).replace(".", ","));
        } else {

        }
    }
    // FIM Método para adicionar o valor de entrada

    //INÍCIO Método para registrar entrada no caixa
    private void adicionarNoCaixaEntrada() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = "INSERT  INTO caixa "
                + "( descricao, "
                + "  valor ,"
                + " tipo_pagamento , "
                + "tipo_movimento , "
                + "data_movimento )  "
                + " VALUES (?,?,?,?,? )";
        try {
            stmt = con.prepareStatement(sql);

            stmt.setString(1, tDescricaoEntrada.getText());
            stmt.setString(2, tValorEntrada.getText().replace(",", "."));
            stmt.setString(3, tipo_entrada);
            stmt.setString(4, "Entrada");
            stmt.setString(5, dataHoje);

            //  formatarDouble.format(Double.parseDouble(tValorp.getText())).toString() 
            // A linha abaixo valida os campos obgtorios
            

                int adicionado = stmt.executeUpdate();
                if (adicionado > 0) {
                    JOptionPane.showMessageDialog(null, "Entrada Adicionada!");
                    listarMovimentoEntrada();
                    limparEntrada();

                    totalEntradaDinheiro();
                    totalEntradaCartao();
                    totalCaixaEntrada_saida();
     
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    //FIM Método para registrar entrada no caixa


}
