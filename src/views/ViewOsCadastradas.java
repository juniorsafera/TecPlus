/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dao.ConnectionFactory;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author IdeaSofist
 */
public class ViewOsCadastradas extends javax.swing.JFrame {

    /**
     * Creates new form ViewOsCadastradas
     */
    // Área para variáveis úteis
    String tipo_pagamento = null;
    String codigo_os = null;
    String entradaCodigoOs = null;

    String dataHoje = null;

    DecimalFormat formatarDouble = new DecimalFormat("0.00");

    String validarPagamento = null;
    
    
    String cliente = "";
    String servico = "";
    String valorP = "00.00";
    
    
    public ViewOsCadastradas() {
        initComponents();
        setaricon();
        pegarDataAtual();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDataOs = new com.toedter.calendar.JDateChooser();
        bAtualizar = new javax.swing.JPanel();
        bBuscarporCodigo = new javax.swing.JPanel();
        tCliente = new javax.swing.JTextField();
        tAparelho = new javax.swing.JTextField();
        tServico = new javax.swing.JTextField();
        tTecnico = new javax.swing.JTextField();
        tPagar = new javax.swing.JTextField();
        cbSituacao = new javax.swing.JComboBox<>();
        tValor = new javax.swing.JTextField();
        tDefeito = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tObservacao = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbOs = new javax.swing.JTable();
        rDinheiro = new javax.swing.JRadioButton();
        rCartao = new javax.swing.JRadioButton();
        cbTipo = new javax.swing.JComboBox<>();
        bSalvar = new javax.swing.JPanel();
        bImprimir = new javax.swing.JPanel();
        bCancelar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDataOs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jDataOs.setOpaque(false);
        getContentPane().add(jDataOs, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 9, 160, 29));

        bAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bAtualizar.setOpaque(false);
        bAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAtualizarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bAtualizarLayout = new javax.swing.GroupLayout(bAtualizar);
        bAtualizar.setLayout(bAtualizarLayout);
        bAtualizarLayout.setHorizontalGroup(
            bAtualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        bAtualizarLayout.setVerticalGroup(
            bAtualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(bAtualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 10, 40, 30));

        bBuscarporCodigo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBuscarporCodigo.setOpaque(false);
        bBuscarporCodigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bBuscarporCodigoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bBuscarporCodigoLayout = new javax.swing.GroupLayout(bBuscarporCodigo);
        bBuscarporCodigo.setLayout(bBuscarporCodigoLayout);
        bBuscarporCodigoLayout.setHorizontalGroup(
            bBuscarporCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        bBuscarporCodigoLayout.setVerticalGroup(
            bBuscarporCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(bBuscarporCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 8, 240, 30));

        tCliente.setEditable(false);
        tCliente.setBackground(new java.awt.Color(47, 47, 73));
        tCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tCliente.setForeground(new java.awt.Color(255, 255, 255));
        tCliente.setBorder(null);
        tCliente.setOpaque(false);
        getContentPane().add(tCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 217, 370, 23));

        tAparelho.setBackground(new java.awt.Color(47, 47, 73));
        tAparelho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tAparelho.setForeground(new java.awt.Color(255, 255, 255));
        tAparelho.setBorder(null);
        tAparelho.setOpaque(false);
        getContentPane().add(tAparelho, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 370, 21));

        tServico.setBackground(new java.awt.Color(47, 47, 73));
        tServico.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tServico.setForeground(new java.awt.Color(255, 255, 255));
        tServico.setBorder(null);
        tServico.setOpaque(false);
        getContentPane().add(tServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 370, 22));

        tTecnico.setBackground(new java.awt.Color(47, 47, 73));
        tTecnico.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tTecnico.setForeground(new java.awt.Color(255, 255, 255));
        tTecnico.setBorder(null);
        tTecnico.setOpaque(false);
        getContentPane().add(tTecnico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 370, 24));

        tPagar.setBackground(new java.awt.Color(47, 47, 73));
        tPagar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tPagar.setForeground(new java.awt.Color(255, 255, 255));
        tPagar.setBorder(null);
        tPagar.setOpaque(false);
        getContentPane().add(tPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(413, 440, 130, 30));

        cbSituacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecione--", "Em Orçamento", "Orçamento Aprovado", "Orçamento Reprovado", "Entregue", "Aparelho Abandonado pelo Cliente", "Aguardando Peças", "Em Serviço", "Serviço Pronto", "Concluído ( Entregue )" }));
        getContentPane().add(cbSituacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 303, 200, 25));

        tValor.setEditable(false);
        tValor.setBackground(new java.awt.Color(47, 47, 73));
        tValor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tValor.setForeground(new java.awt.Color(255, 255, 255));
        tValor.setBorder(null);
        tValor.setOpaque(false);
        tValor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tValorMouseClicked(evt);
            }
        });
        getContentPane().add(tValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 130, 34));

        tDefeito.setBackground(new java.awt.Color(47, 47, 73));
        tDefeito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tDefeito.setForeground(new java.awt.Color(255, 255, 255));
        tDefeito.setBorder(null);
        tDefeito.setOpaque(false);
        getContentPane().add(tDefeito, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 262, 200, 20));

        tObservacao.setColumns(20);
        tObservacao.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        tObservacao.setLineWrap(true);
        tObservacao.setRows(5);
        tObservacao.setBorder(null);
        tObservacao.setOpaque(false);
        jScrollPane1.setViewportView(tObservacao);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 340, 200, 80));

        tbOs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbOs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbOsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbOs);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1000, 120));

        buttonGroup1.add(rDinheiro);
        rDinheiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rDinheiroMouseClicked(evt);
            }
        });
        rDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rDinheiroActionPerformed(evt);
            }
        });
        getContentPane().add(rDinheiro, new org.netbeans.lib.awtextra.AbsoluteConstraints(573, 453, -1, -1));

        buttonGroup1.add(rCartao);
        rCartao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rCartaoMouseClicked(evt);
            }
        });
        rCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rCartaoActionPerformed(evt);
            }
        });
        getContentPane().add(rCartao, new org.netbeans.lib.awtextra.AbsoluteConstraints(718, 453, -1, -1));

        cbTipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecione--", "Orçamento", "Ordem de Serviço" }));
        getContentPane().add(cbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 222, 200, -1));

        bSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSalvar.setOpaque(false);
        bSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSalvarMouseClicked(evt);
            }
        });
        bSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bSalvarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout bSalvarLayout = new javax.swing.GroupLayout(bSalvar);
        bSalvar.setLayout(bSalvarLayout);
        bSalvarLayout.setHorizontalGroup(
            bSalvarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        bSalvarLayout.setVerticalGroup(
            bSalvarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(bSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 508, -1, 30));

        bImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bImprimir.setOpaque(false);
        bImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bImprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bImprimirLayout = new javax.swing.GroupLayout(bImprimir);
        bImprimir.setLayout(bImprimirLayout);
        bImprimirLayout.setHorizontalGroup(
            bImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );
        bImprimirLayout.setVerticalGroup(
            bImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(bImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 510, 110, 30));

        bCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bCancelar.setOpaque(false);
        bCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bCancelarLayout = new javax.swing.GroupLayout(bCancelar);
        bCancelar.setLayout(bCancelarLayout);
        bCancelarLayout.setHorizontalGroup(
            bCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        bCancelarLayout.setVerticalGroup(
            bCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(bCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 508, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TelaOsCadastradas_1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCancelarMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_bCancelarMouseClicked

    private void bSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bSalvarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_bSalvarKeyPressed

    private void bSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSalvarMouseClicked
        // TODO add your handling code here:
        if ((tipo_pagamento == null) && (cbTipo.getSelectedItem().toString().equals("Ordem de Serviço")) && (cbSituacao.getSelectedItem().toString().equals("Concluído ( Entregue )"))) {
            JOptionPane.showMessageDialog(this, "Informe a forma de pagamento final!", "Atençao!", JOptionPane.WARNING_MESSAGE);
        } else if((tipo_pagamento == null) && (cbTipo.getSelectedItem().toString().equals("Ordem de Serviço")) && (cbSituacao.getSelectedItem().toString().equals("Concluído ( Entregue )"))) {
            salvarAlteracoes();
            registrarPagamentoCaixa();
        } else {
            salvarAlteracoes();
             
        }
    }//GEN-LAST:event_bSalvarMouseClicked

    private void bImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bImprimirMouseClicked
        // TODO add your handling code here:
        imprimir_os();
    }//GEN-LAST:event_bImprimirMouseClicked

    private void rDinheiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rDinheiroMouseClicked
        // TODO add your handling code here:
         tipo_pagamento = "Dinheiro";
    }//GEN-LAST:event_rDinheiroMouseClicked

    private void rCartaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rCartaoMouseClicked
        // TODO add your handling code here:
         tipo_pagamento = "Cartão";
    }//GEN-LAST:event_rCartaoMouseClicked

    private void tValorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tValorMouseClicked
        // TODO add your handling code here:
          String entrada = null;
        Double valor = 0.0;

      
            entrada = JOptionPane.showInputDialog("Digite o valor do serviço:");

            if (entrada != null) {
                valor = Double.parseDouble(entrada.toString().replace(",", "."));

                tValor.setText(String.valueOf(formatarDouble.format(valor)).replace(".", ","));
                valorP = String.valueOf(formatarDouble.format(valor)).replace(".", ",");
                tPagar.setText(valorP);
                
            }
    
    }//GEN-LAST:event_tValorMouseClicked

    private void bBuscarporCodigoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBuscarporCodigoMouseClicked
        // TODO add your handling code here:
          entradaCodigoOs = JOptionPane.showInputDialog("Digite o Código da Ordem de Serviço:");
        if (entradaCodigoOs != null) {
            buscarOsPorCodigo();
        }
    }//GEN-LAST:event_bBuscarporCodigoMouseClicked

    private void bAtualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAtualizarMouseClicked
        // TODO add your handling code here:
         listar_ordemServico_por_data();
    }//GEN-LAST:event_bAtualizarMouseClicked

    private void tbOsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbOsMouseClicked
        // TODO add your handling code here:
         setarDadosFormulario();
    }//GEN-LAST:event_tbOsMouseClicked

    private void rCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rCartaoActionPerformed
        // TODO add your handling code here:
        
        tipo_pagamento = "Cartão";
        
    }//GEN-LAST:event_rCartaoActionPerformed

    private void rDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rDinheiroActionPerformed
        // TODO add your handling code here:
        tipo_pagamento = "Dinheiro";
    }//GEN-LAST:event_rDinheiroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewOsCadastradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewOsCadastradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewOsCadastradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewOsCadastradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewOsCadastradas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bAtualizar;
    private javax.swing.JPanel bBuscarporCodigo;
    private javax.swing.JPanel bCancelar;
    private javax.swing.JPanel bImprimir;
    private javax.swing.JPanel bSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbSituacao;
    private javax.swing.JComboBox<String> cbTipo;
    private com.toedter.calendar.JDateChooser jDataOs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rCartao;
    private javax.swing.JRadioButton rDinheiro;
    private javax.swing.JTextField tAparelho;
    private javax.swing.JTextField tCliente;
    private javax.swing.JTextField tDefeito;
    private javax.swing.JTextArea tObservacao;
    private javax.swing.JTextField tPagar;
    private javax.swing.JTextField tServico;
    private javax.swing.JTextField tTecnico;
    private javax.swing.JTextField tValor;
    private javax.swing.JTable tbOs;
    // End of variables declaration//GEN-END:variables


/*
    *
    * ÁREA PARA TODOS OS MÉTODOS
    *
     */
    // INÍCIO Método para setar icon do jFrame
    private void setaricon() {

        //  ImageIcon frameIcon = new ImageIcon("icon.png");
        //this.setIconImage(frameIcon.getImage());
        URL url = this.getClass().getResource("icon.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
    }
    // FIM Método para setar icon do jFrame

    //INÍCIO Método para pegar a data atual do sistema
    private void pegarDataAtual() {

        Date data = new Date(System.currentTimeMillis());
        SimpleDateFormat formatarDate = new SimpleDateFormat("yyyy-MM-dd");
        dataHoje = formatarDate.format(data);

    }
    //FIM Método para pegar a data atual do sistema
    
    //INÍCIO Método para converter data dd/MM/yyyy para yyyy-MM-dd  
    public static String convertSql(String Data) {
        return Data.substring(6, 10) + "-" + Data.substring(3, 5) + "-" + Data.substring(0, 2);
    }
    //FIM Método para converter data dd/MM/yyyy para yyyy-MM-dd
    
    
    

    // INÍCIO Método para pesquisar OS por Data
    private void listar_ordemServico_por_data() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = " SELECT OSER.codigo_os Código, "
                + "CLI.nome Cliente,"
                + "tipo Tipo, "
                + "aparelho Aparelho,"
                + "defeito Defeito,"
                + "servico Serviço,"
                + "situacao Situação,"
                + "tecnico Técnico,"
                + "observacao Observação,"
                + "valor_total TOTAL_R$,"
                + "valor_entrada Entrada_R$ ,"
                + "valor_pagar Pagar_R$ "
                + "FROM ordem_servicos as OSER inner join clientes as CLI on "
                + "(CLI.idclientes = OSER.clientes_idclientes)  "
                + "WHERE data_solicitado LIKE ? ";
        try {

            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");

            stmt = con.prepareStatement(sql);
            stmt.setString(1, convertSql(df.format(jDataOs.getDate())) + "%");

            rs = stmt.executeQuery();

            tbOs.setModel(DbUtils.resultSetToTableModel(rs));

            tbOs.setDefaultEditor(Object.class, null);

            tbOs.getColumnModel().getColumn(0).setPreferredWidth(55);  // Código
            tbOs.getColumnModel().getColumn(1).setPreferredWidth(135); // Cliente
            tbOs.getColumnModel().getColumn(2).setPreferredWidth(120); // Tipo
            tbOs.getColumnModel().getColumn(3).setPreferredWidth(115); // Aparelho
            tbOs.getColumnModel().getColumn(4).setPreferredWidth(120); // Defeito
            tbOs.getColumnModel().getColumn(5).setPreferredWidth(120);  // Serviço
            tbOs.getColumnModel().getColumn(6).setPreferredWidth(110);  // Situação
            tbOs.getColumnModel().getColumn(7).setPreferredWidth(80);  // Técnico
            tbOs.getColumnModel().getColumn(8).setPreferredWidth(160);  // Observação
            tbOs.getColumnModel().getColumn(9).setPreferredWidth(80);  // Valor TOTAL
            tbOs.getColumnModel().getColumn(10).setPreferredWidth(85); // Valor ENTRADA
            tbOs.getColumnModel().getColumn(11).setPreferredWidth(80); // Valor a PAGAR

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    // FIM Método para pesquisar OS por Data

    //INÍCIO Método para setar campos da tabela no formulário
    private void setarDadosFormulario() {

        int setar = tbOs.getSelectedRow();
        codigo_os = tbOs.getModel().getValueAt(setar, 0).toString();
        tCliente.setText(tbOs.getModel().getValueAt(setar, 1).toString());
        
        cliente = tbOs.getModel().getValueAt(setar, 1).toString();
        
        cbTipo.setSelectedItem(tbOs.getModel().getValueAt(setar, 2).toString());
        
        tAparelho.setText(tbOs.getModel().getValueAt(setar, 3).toString());
        
        tDefeito.setText(tbOs.getModel().getValueAt(setar, 4).toString());
        
        tServico.setText(tbOs.getModel().getValueAt(setar, 5).toString());
        
        servico = tbOs.getModel().getValueAt(setar, 5).toString();
        
        cbSituacao.setSelectedItem(tbOs.getModel().getValueAt(setar, 6).toString());
        tTecnico.setText(tbOs.getModel().getValueAt(setar, 7).toString());
        tObservacao.setText(tbOs.getModel().getValueAt(setar, 8).toString());
        tValor.setText(tbOs.getModel().getValueAt(setar, 9).toString().replace(".", ","));
        
       

        tPagar.setText(tbOs.getModel().getValueAt(setar, 11).toString().replace(".", ","));
        
        
        valorP = tbOs.getModel().getValueAt(setar, 11).toString() ;

         

        if (tbOs.getModel().getValueAt(setar, 11).toString().replace(".", ",").equals("00,00") || tbOs.getModel().getValueAt(setar, 11).toString().replace(".", ",").equals("0,00")) {
            
        } else {
            
            validarPagamento = "sim";
        }
        

         

    }
    //FIM Método para setar campos da tabela no formulário

    // INÍCIO Método para buscar uma os pelo código
    private void buscarOsPorCodigo() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = " SELECT OSER.codigo_os Código, "
                + "CLI.nome Cliente,"
                + "tipo Tipo, "
                + "aparelho Aparelho,"
                + "defeito Defeito,"
                + "servico Serviço,"
                + "situacao Situação,"
                + "tecnico Técnico,"
                + "observacao Observação,"
                + "valor_total TOTAL_R$,"
                + "valor_entrada Entrada_R$ ,"
                + "valor_pagar Pagar_R$ "
                + "FROM ordem_servicos as OSER inner join clientes as CLI on "
                + "(CLI.idclientes = OSER.clientes_idclientes)  "
                + "WHERE codigo_os = ? ";
        try {

            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");

            stmt = con.prepareStatement(sql);
            stmt.setString(1, entradaCodigoOs);

            rs = stmt.executeQuery();

            tbOs.setModel(DbUtils.resultSetToTableModel(rs));

            tbOs.setDefaultEditor(Object.class, null);

            tbOs.getColumnModel().getColumn(0).setPreferredWidth(55);  // Código
            tbOs.getColumnModel().getColumn(1).setPreferredWidth(135); // Cliente
            tbOs.getColumnModel().getColumn(2).setPreferredWidth(120); // Tipo
            tbOs.getColumnModel().getColumn(3).setPreferredWidth(115); // Aparelho
            tbOs.getColumnModel().getColumn(4).setPreferredWidth(120); // Defeito
            tbOs.getColumnModel().getColumn(5).setPreferredWidth(120);  // Serviço
            tbOs.getColumnModel().getColumn(6).setPreferredWidth(110);  // Situação
            tbOs.getColumnModel().getColumn(7).setPreferredWidth(80);  // Técnico
            tbOs.getColumnModel().getColumn(8).setPreferredWidth(160);  // Observação
            tbOs.getColumnModel().getColumn(9).setPreferredWidth(80);  // Valor TOTAL
            tbOs.getColumnModel().getColumn(10).setPreferredWidth(85); // Valor ENTRADA
            tbOs.getColumnModel().getColumn(11).setPreferredWidth(80); // Valor a PAGAR

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }
    }
    // FIM Método para buscar uma os pelo código

    // INÍCIO Método para atualizar dados de ordem de serviço
    private void salvarAlteracoes() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = "UPDATE ordem_servicos SET "
                + "tipo =? ,"
                + "tecnico =? , "
                + "situacao =? , "
                + "servico =? , "
                + "observacao =? , "
                + "valor_total =? , "
                + "valor_pagar =? "
                + " WHERE codigo_os =? ";
        try {
            stmt = con.prepareStatement(sql);
            stmt.setString(1, cbTipo.getSelectedItem().toString());
            stmt.setString(2, tTecnico.getText());
            stmt.setString(3, cbSituacao.getSelectedItem().toString());
            stmt.setString(4, tServico.getText());
            stmt.setString(5, tObservacao.getText());
            stmt.setString(6, tValor.getText());
            stmt.setString(7, tPagar.getText());

            stmt.setString(8, codigo_os);

            // A linha abaixo atualiza os dados     
            int adicionado = stmt.executeUpdate();
            if (adicionado > 0) {
                JOptionPane.showMessageDialog(null, "Dados Atualizados com sucesso!");
                limparCampos();

                registrarPagamentoCaixa();

                if (jDataOs.getDate() == null) {
                    buscarOsPorCodigo();
                } else {
                    listar_ordemServico_por_data();
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }

    }
    // FIM Método para atualizar dados de ordem de serviço

    // INÍCIO Método para limpar campos de formulário
    private void limparCampos() {
        codigo_os = null;
        cbTipo.setSelectedItem("--Selecione--");
        cbSituacao.setSelectedItem("--Selecione--");
        tCliente.setText(null);
        tAparelho.setText(null);
        tDefeito.setText(null);
        tServico.setText(null);
        tTecnico.setText(null);
        tObservacao.setText(null);
        tValor.setText("00,00");
        tPagar.setText("00,00");

        validarPagamento = null;

        
    }
    // FIM Método para limpar campos de formulário

    //INÍCIO Método para imprimir OS
    private void imprimir_os() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a Impressão desta OS?", "Atenção!", JOptionPane.YES_NO_OPTION);
        if (confirma == JOptionPane.YES_OPTION) {
            // Imprimindo relatório com o framework JasperReports

            final ViewLoading carregando = new ViewLoading();

            carregando.setVisible(true);
            Thread t = new Thread() {

                public void run() {

                    try {
                        //String sql2 = "delete from tbos where os=?";

                        HashMap filtro = new HashMap<>();

                        filtro.put("codigo", Integer.parseInt(codigo_os));

                        // Usando a classe JasperPrint para preparar a impressão
                        JasperPrint print = JasperFillManager.fillReport("src/util/imprimir_os.jasper", filtro, con);
                        carregando.dispose();
                        JasperViewer.viewReport(print, false);

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                        carregando.dispose();
                    } finally {
                        ConnectionFactory.closeConnection(con, stmt);
                    }
                }
            };
            t.start();
        }
    }
    //FIM Método para imprimir OS

    private void registrarPagamentoCaixa() {

        java.sql.Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        String sql = "INSERT  INTO caixa "
                + "( descricao, "
                + "  valor , "
                + "tipo_movimento , "
                + "tipo_pagamento , "
                + "data_movimento)  "
                + " VALUES (?,?,?,?,?)";
        try {
            stmt = con.prepareStatement(sql);

            stmt.setString(1, "Pagamento final de serviço (" + servico + ") de: " + cliente);
            stmt.setString(2, valorP.replace(",", "."));

            stmt.setString(3, "Entrada");
            stmt.setString(4, tipo_pagamento);
            stmt.setString(5, dataHoje);

            

                int adicionado = stmt.executeUpdate();

                if (adicionado > 0) {
                    System.out.println("Registrou caixa! (" + cliente + ") de: " + valorP );
                }
             
        } catch (Exception e) {

        } finally {
            ConnectionFactory.closeConnection(con, stmt);
        }

    }

 
}
